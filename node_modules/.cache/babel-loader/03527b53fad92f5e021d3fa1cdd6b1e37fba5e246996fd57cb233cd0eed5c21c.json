{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nconst useFetchAlbums = () => {\n  _s();\n  const [albums, setAlbums] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [exito, setExito] = useState(false);\n  const fetchAlbums = async (artistId, artistName) => {\n    setLoading(true);\n    setError(null);\n    setExito(false);\n    setAlbums([]);\n    try {\n      const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.deezer.com/artist/${artistId}/albums`);\n      const albumsData = response.data.data.map(album => ({\n        id: album.id,\n        image: album.cover_medium,\n        album: album.title,\n        artist: artistName\n      }));\n      setAlbums(albumsData);\n      setExito(true);\n    } catch (error) {\n      setError(\"error al obtener albums\");\n    }\n    setLoading(false);\n  };\n  return {\n    albums,\n    fetchAlbums,\n    loading,\n    error,\n    exito\n  };\n};\n_s(useFetchAlbums, \"edPowMcXwAi4wCKgpzu0cS447Wg=\");\nexport default useFetchAlbums;","map":{"version":3,"names":["useState","axios","useFetchAlbums","_s","albums","setAlbums","loading","setLoading","error","setError","exito","setExito","fetchAlbums","artistId","artistName","response","get","albumsData","data","map","album","id","image","cover_medium","title","artist"],"sources":["C:/Users/Fernando/Documents/React/GroovesLibrarypt2/grooveslibrarypt2/src/hooks/useFetchAlbums.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst useFetchAlbums = () => {\r\n    const [albums, setAlbums] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [exito, setExito] = useState(false);\r\n\r\n\r\n    const fetchAlbums = async ( artistId, artistName) => {\r\n        setLoading(true);\r\n        setError(null);\r\n        setExito(false);\r\n        setAlbums([]);\r\n\r\n\r\n\r\n        try {\r\n            const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.deezer.com/artist/${artistId}/albums`);\r\n            const albumsData = response.data.data.map((album) => ({\r\n                id:album.id,\r\n                image:album.cover_medium,\r\n                album: album.title,\r\n                artist: artistName,\r\n            }));\r\n\r\n            setAlbums(albumsData);\r\n            setExito(true);\r\n        } catch (error) {\r\n            setError(\"error al obtener albums\");\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    return {albums, fetchAlbums, loading, error, exito};\r\n};\r\n\r\nexport default useFetchAlbums;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAGzB,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAGzC,MAAMY,WAAW,GAAG,MAAAA,CAAQC,QAAQ,EAAEC,UAAU,KAAK;IACjDP,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACdE,QAAQ,CAAC,KAAK,CAAC;IACfN,SAAS,CAAC,EAAE,CAAC;IAIb,IAAI;MACA,MAAMU,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,qEAAqEH,QAAQ,SAAS,CAAC;MACxH,MAAMI,UAAU,GAAGF,QAAQ,CAACG,IAAI,CAACA,IAAI,CAACC,GAAG,CAAEC,KAAK,KAAM;QAClDC,EAAE,EAACD,KAAK,CAACC,EAAE;QACXC,KAAK,EAACF,KAAK,CAACG,YAAY;QACxBH,KAAK,EAAEA,KAAK,CAACI,KAAK;QAClBC,MAAM,EAAEX;MACZ,CAAC,CAAC,CAAC;MAEHT,SAAS,CAACY,UAAU,CAAC;MACrBN,QAAQ,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACZC,QAAQ,CAAC,yBAAyB,CAAC;IACvC;IACAF,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,OAAO;IAACH,MAAM;IAAEQ,WAAW;IAAEN,OAAO;IAAEE,KAAK;IAAEE;EAAK,CAAC;AACvD,CAAC;AAACP,EAAA,CAjCID,cAAc;AAmCpB,eAAeA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
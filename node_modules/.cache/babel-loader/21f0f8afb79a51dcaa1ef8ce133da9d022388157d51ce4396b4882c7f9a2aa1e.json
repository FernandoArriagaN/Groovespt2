{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport axios from \"axios\";\nconst useFetchAlbums = () => {\n  _s();\n  const [tracks, setTracks] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchTracks = useCallback(async albumId => {\n    if (tracks[albumId]) return; // Ya está en caché\n\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`https://cors-anywhere.herokuapp.com/https://api.deezer.com/album/${albumId}/tracks`);\n      setTracks(prev => ({\n        ...prev,\n        [albumId]: response.data.data\n      }));\n    } catch (err) {\n      console.error(err);\n      setError(\"Error al cargar canciones\");\n    } finally {\n      setLoading(false);\n    }\n  }, [tracks]);\n  return {\n    tracks,\n    loading,\n    error,\n    fetchTracks\n  };\n};\n_s(useFetchAlbums, \"e438jiQHAd+pWJks0lQfurFTx00=\");\nexport default useFetchAlbums;","map":{"version":3,"names":["useState","useCallback","axios","useFetchAlbums","_s","tracks","setTracks","loading","setLoading","error","setError","fetchTracks","albumId","response","get","prev","data","err","console"],"sources":["C:/Users/Fernando/Documents/React/GroovesLibrarypt2/grooveslibrarypt2/src/hooks/useFetchAlbums.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useFetchAlbums = () => {\r\n  const [tracks, setTracks] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchTracks = useCallback(async (albumId) => {\r\n    if (tracks[albumId]) return; // Ya está en caché\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(\r\n        `https://cors-anywhere.herokuapp.com/https://api.deezer.com/album/${albumId}/tracks`\r\n      );\r\n      setTracks((prev) => ({ ...prev, [albumId]: response.data.data }));\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError(\"Error al cargar canciones\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [tracks]);\r\n\r\n  return {\r\n    tracks,\r\n    loading,\r\n    error,\r\n    fetchTracks,\r\n  };\r\n};\r\n\r\nexport default useFetchAlbums;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,WAAW,GAAGV,WAAW,CAAC,MAAOW,OAAO,IAAK;IACjD,IAAIP,MAAM,CAACO,OAAO,CAAC,EAAE,OAAO,CAAC;;IAE7BJ,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAC9B,oEAAoEF,OAAO,SAC7E,CAAC;MACDN,SAAS,CAAES,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACH,OAAO,GAAGC,QAAQ,CAACG,IAAI,CAACA;MAAK,CAAC,CAAC,CAAC;IACnE,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACT,KAAK,CAACQ,GAAG,CAAC;MAClBP,QAAQ,CAAC,2BAA2B,CAAC;IACvC,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EAEZ,OAAO;IACLA,MAAM;IACNE,OAAO;IACPE,KAAK;IACLE;EACF,CAAC;AACH,CAAC;AAACP,EAAA,CA7BID,cAAc;AA+BpB,eAAeA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}